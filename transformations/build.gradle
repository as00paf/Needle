apply plugin: 'com.android.library'

android {
  compileSdkVersion COMPILE_SDK_VERSION as int
  buildToolsVersion BUILD_TOOLS_VERSION

  defaultConfig {
    minSdkVersion MIN_SDK_VERSION as int
    targetSdkVersion TARGET_SDK_VERSION as int
    versionCode VERSION_CODE as int
    versionName VERSION_NAME
    renderscriptTargetApi RENDERSCRIPT_TARGET_API as int
    renderscriptSupportModeEnabled true
  }
}

dependencies {
  compile "com.squareup.picasso:picasso:${PICASSO_VERSION}"
  //compile "jp.co.cyberagent.android.gpuimage:gpuimage-library:${GPUIMAGE_VERSION}"
}

android.libraryVariants.all { variant ->
  if (variant.buildType.isDebuggable()) {
    return; // Skip debug builds.
  }
  task("javadoc${variant.name.capitalize()}", type: Javadoc) {
    description "Generates Javadoc for $variant.name."
    source = variant.javaCompile.source
    ext.androidJar =
        System.getenv("ANDROID_HOME") + "/platforms/${android.compileSdkVersion}/android.jar"
    classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
  }

  task("bundleJavadoc${variant.name.capitalize()}", type: Jar) {
    description "Bundles Javadoc into zip for $variant.name."
    classifier = "javadoc"
    from tasks["javadoc${variant.name.capitalize()}"]
  }
}

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:1.0.0'
    classpath 'com.google.gms:google-services:1.3.0-beta1'

    // NOTE: Do not place your application dependencies here; they belong
    // in the individual module build.gradle files
  }
}

apply from: 'android-artifacts.gradle'
apply from: 'central-publish.gradle'